
    --white: #fff;
    --black: #000;
    --tinted-black: rgba(45, 45, 45, 0.7);
    --dark-main: #6A0406;
    --main: #b4070a;
    --variant-main: #F9DEC9;
    --light-variant-main: #FFF5ED;
    --complementary-main: #56E39F;
    --light-complementary-main: #F9FFFC;
    --light-main: #ddf2ff;
    --logo-grey: #969593;
    --main-opacity: rgba(31, 142, 17, 0.8);
    --mid-opacity: rgba(31, 142, 17, 0.5);
    --light-opacity: rgba(31, 142, 17, 0.2);
    --grey: #b2b2b2;
    --light-grey: #CDCDCD;
    --dark-grey: #242F40;
    --blue: #C7DDFF;
    --card-width: 200px;
    --card-height: 300px;
    --card-transition-duration: 800ms;
    --card-transition-easing: ease;
    --style-font: "Great Vibes", cursive;

     {/* <FieldSetFormLayout legend='Patron Detail'>
          <CustomGridInput
            label='Surname'
            name='surname'
            value={formData.surname}
            onChange={handleChange}
            required
          />
          <CustomGridInput
            label='Firstname'
            name='firstname'
            value={formData.firstname}
            onChange={handleChange}
            required
          />
          <CustomGridInput
            label='Middlename'
            name='middlename'
            value={formData.middlename}
            onChange={handleChange}
          />
          <CustomGridInput
            label='email'
            name='email'
            value={formData.email}
            onChange={handleChange}
            required
          />
          <CustomGridInput
            label='Phone Number'
            name='phoneNumber'
            value={formData.phoneNumber}
            onChange={handleChange}
          />
          <CustomGridInput
            label='Gender'
            type='select'
            name='phoneNumber'
            value={formData.phoneNumber}
            onChange={handleChange}
          />
        </FieldSetFormLayout>
        <FieldSetFormLayout legend='Patron Address'>
          <CustomGridInput
            label='Street'
            type='select'
            name='street'
            value={formData.street}
            onChange={handleChange}
          />
          <CustomGridInput
            label='City'
            type='select'
            name='city'
            value={formData.city}
            onChange={handleChange}
          />
          <CustomGridInput
            label='State'
            type='select'
            name='state'
            value={formData.state}
            onChange={handleChange}
          />
          <CustomGridInput
            label='Zip Code'
            type='select'
            name='zipCode'
            value={formData.zipCode}
            onChange={handleChange}
          />
          <CustomGridInput
            label='Country'
            type='select'
            name='country'
            value={formData.country}
            onChange={handleChange}
          />
        </FieldSetFormLayout> */}

          const { getPatron } = props
  const [patronBarcode, setPatronBarcode] = useState('')

  const debouncedGetPatron = debounce(getPatron, 2000)

  function handleBarcodeScan(event) {
    const scannedBarcode = event.target.value
    setPatronBarcode(scannedBarcode)
    debouncedGetPatron(scannedBarcode)
  }

  function handleChange(event) {
    const scannedBarcode = event.target.value
    setPatronBarcode(scannedBarcode)
  }